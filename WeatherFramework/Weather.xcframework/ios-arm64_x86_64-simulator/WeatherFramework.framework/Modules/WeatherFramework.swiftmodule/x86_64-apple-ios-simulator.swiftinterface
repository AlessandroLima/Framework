// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name WeatherFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
@_exported import WeatherFramework
import _Concurrency
import _StringProcessing
public struct Weather : Swift.Codable, Swift.Equatable {
  public var temp: Swift.Double
  public static func == (lhs: WeatherFramework.Weather, rhs: WeatherFramework.Weather) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct WeatherClient {
  public init(session: WeatherFramework.URLSessionProtocol = URLSessionWrapper())
  #if compiler(>=5.3) && $AsyncAwait
  public func fetchWeather(location: WeatherFramework.Location) async throws -> WeatherFramework.Weather
  #endif
}
public protocol URLSessionProtocol {
  #if compiler(>=5.3) && $AsyncAwait
  func data(from url: Foundation.URL) async throws -> (Foundation.Data, Foundation.URLResponse)
  #endif
}
public struct URLSessionWrapper : WeatherFramework.URLSessionProtocol {
  public init()
  #if compiler(>=5.3) && $AsyncAwait
  public func data(from url: Foundation.URL) async throws -> (Foundation.Data, Foundation.URLResponse)
  #endif
}
public struct GeocodingClient {
  public init(session: WeatherFramework.URLSessionProtocol = URLSessionWrapper())
  #if compiler(>=5.3) && $AsyncAwait
  public func coordinateByCity(_ city: Swift.String) async throws -> WeatherFramework.Location?
  #endif
}
public struct Location : Swift.Codable, Swift.Equatable {
  public static func == (lhs: WeatherFramework.Location, rhs: WeatherFramework.Location) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers final public class MeasurementFormarter {
  public static func temperature(value: Swift.Double) -> Swift.String
  @objc deinit
}
